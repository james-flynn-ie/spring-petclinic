# DEVELOPMENT OPERATIONS CONTINUOUS ASSESSMENT

pool:
  # Using an Azure DevOps hosted agent. The advantages are:
  #  - The build VM is deployed by Microsoft, reducing maintenance.
  #  - Tools within the VM Image are always up to date.
  #  - Fresh build environment for every run (to reduce contamination from other runs).
  # see: https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml
  vmImage: ubuntu-20.04

# Adding extra information into build name, to make it easier to identify builds on Azure DevOps build dashboard. 
# It can be called within pipeline using '$(Build.BuildNumber)'
# see: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml
name: $(Build.DefinitionName).$(SourceBranchName).$(Date:yyyyMMdd)$(Rev:.r)

pr:
  - main # Only trigger build for Pull Requests which target 'main' branch. Otherwise, it runs 2 builds (source and target) for each PR.

stages:
  - stage: CI_CDelivery
    displayName: 'Continuous Integration and Delivery'
    dependsOn: []
    jobs:
    - job: BuildTestDeploy
      displayName: Build Test and Package spring-petclinic
      steps:

      # Azure DevOps extension for configuring SonarCloud properties
      # see: https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud
      - task: SonarCloudPrepare@1
        displayName: 'Prepare SonarCloud Code Analysis Scan'
        inputs:
          # Azure DevOps Service Connection is used in place of secureSonar Token value within repo.
          # For configuring, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml
          SonarCloud: 'sonarcloud-svc-connection'
          organization: 'james-flynn-ie'
          scannerMode: 'Other'
          ProjectKey: 'james-flynn-ie_spring-petclinic'
          ProjectName: 'spring-petclinic'
          # Sonar scanner does not allow branch name to be set for Pull Requests (PRs), but returns an error if not specified for CI builds.
          # This conditional block only passes the branch name if build is not for a PR, otherwise it passes the Sonar PR params:
          ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
            extraProperties: |
              sonar.branch.name=$(Build.SourceBranchName)
              sonar.projectKey=james-flynn-ie_spring-petclinic
          ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
            extraProperties: |
              sonar.pullrequest.key=$(System.PullRequest.pullRequestNumber)
              sonar.pullrequest.branch=$(Build.SourceBranchName)
              sonar.pullrequest.base=$(System.PullRequest.TargetBranch)
              sonar.projectKey=james-flynn-ie_spring-petclinic

      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven?view=azure-devops
      - task: Maven@3
        displayName: 'Maven Build, Test and Package'
        inputs:
          mavenPomFile: 'pom.xml'
          # 'clean install sonar:sonar' is required to run the Sonarcloud scan ('package' creates the JAR).
          # See: https://www.coachdevops.com/2020/04/how-to-integrate-sonarqube-in-azure.html
          goals: 'clean install sonar:sonar package'
          publishJUnitResults: true # Publishes test reports in pipeline run report on Azure DevOps UI.
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: '$(Build.BuildNumber)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenOptions: '-Xmx3072m'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest' # Select latest SonarQube plugin for Maven. Relies on POM dependency version, if not set.
  
      # Adds results and link to sonarcloud.io reports under 'Extensions' tab on pipeline run report.
      # see: https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud
      - task: SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result on SonarCloud'
        inputs:
          pollingTimeoutSec: '300'

      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops&tabs=yaml
      - task: CopyFiles@2
        displayName: 'Copy Files to artifact staging directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/target/*.?(war|jar)'
          TargetFolder: $(Build.ArtifactStagingDirectory)
          preserveTimestamp: true
  
      # Publish build artifacts to Azure Pipelines (Continuous Delivery).
      # Build artifacts are retained and can be downloaded for local use, or used in other stages or pipeline runs for deployments.
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/publish-build-artifacts?view=azure-devops
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)/target' 
          artifactName: 'jar-artifact' 
          publishLocation: 'Container' # Publishes inside Azure Pipelines artifact folder.
          parallel: true # Increased speed through multi-threaded copying.
          parallelCount: 8 # Dependent upon CPU capabilities.

  - stage: CDeployment
    displayName: 'Continuous Deployment'
    dependsOn: [CI_CDelivery]
    # Only deploy web app to production env using main branch. This stage will be skipped for all other branches.
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
    - job: DeployWebApp
      displayName: Deploy spring-petclinic Java Web App
      steps:
      # Need to download JAR built in CI-CDelivery stage first, as artifacts are not passed between stages.
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: 'jar-artifact'
          path: $(System.DefaultWorkingDirectory)

      # Deploy JAR into Azure Web App Service https://docs.microsoft.com/en-us/azure/app-service/overview
      # Azure App Service offers a Web application hosting Platform-as-a-Service, offering:
      #  - Hosting
      #  - Public URL
      #  - High Availability and autoscaling (based on policies)
      #  - Security
      #  - Load balancing
      # See: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-rm-web-app?view=azure-devops
      - task: AzureWebApp@1
        displayName: Deploy spring-petclinic to Azure Web App service
        inputs:
          # For configuring a Service Connection, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml
          azureSubscription: 'azure-svc-connection'
          appType: webAppLinux
          appName: 'james-pet-clinic'
          package: '$(System.DefaultWorkingDirectory)/**/*.jar'
...
